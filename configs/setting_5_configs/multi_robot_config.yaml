ENVIRONMENT:
  MAX_EPISODE_STEPS: 500
  ITERATOR_OPTIONS:
    SHUFFLE: False
    GROUP_BY_SCENE: True
    CYCLE: False

PHYSICS_SIMULATOR:
  TYPE: "Sim-Phys"
  AGENTS: ['AGENT_0', 'AGENT_1']  # 두 개의 에이전트 정의
  
  # 첫 번째 로봇 설정
  AGENT_0:
    SENSORS: ['RGB_SENSOR_0', 'DEPTH_SENSOR_0']
    ANGULAR_FRICTION: 0.0
    LINEAR_FRICTION: 0.0
    INITIAL_POSITION: [0.0, 0.0, 0.0]  # 초기 위치
    INITIAL_ROTATION: [0.0, 0.0, 0.0, 1.0]  # 초기 회전 (쿼터니언)
    
  # 두 번째 로봇 설정  
  AGENT_1:
    SENSORS: ['RGB_SENSOR_1', 'DEPTH_SENSOR_1']
    ANGULAR_FRICTION: 0.0
    LINEAR_FRICTION: 0.0
    INITIAL_POSITION: [2.0, 0.0, 0.0]  # 다른 초기 위치
    INITIAL_ROTATION: [0.0, 0.0, 0.0, 1.0]
    
  HABITAT_SIM_V0:
    GPU_DEVICE_ID: 0
    ENABLE_PHYSICS: True
    
  # 첫 번째 로봇의 센서들
  RGB_SENSOR_0:
    WIDTH: 512
    HEIGHT: 512
    POSITION: [0, 0.65, 0]
    
  DEPTH_SENSOR_0:
    WIDTH: 512
    HEIGHT: 512
    POSITION: [0, 0.65, 0]
    NORMALIZE_DEPTH: False
    
  # 두 번째 로봇의 센서들
  RGB_SENSOR_1:
    WIDTH: 512
    HEIGHT: 512
    POSITION: [0, 0.65, 0]
    
  DEPTH_SENSOR_1:
    WIDTH: 512
    HEIGHT: 512
    POSITION: [0, 0.65, 0]
    NORMALIZE_DEPTH: False

TASK:
  TYPE: Nav-Phys
  SUCCESS_DISTANCE: 0.2
  
  # 각 에이전트별 센서 설정
  AGENT_0_SENSORS: ['POINTGOAL_WITH_GPS_COMPASS_SENSOR_0']
  AGENT_1_SENSORS: ['POINTGOAL_WITH_GPS_COMPASS_SENSOR_1']
  
  POINTGOAL_WITH_GPS_COMPASS_SENSOR_0:
    GOAL_FORMAT: "POLAR"
    DIMENSIONALITY: 2
    
  POINTGOAL_WITH_GPS_COMPASS_SENSOR_1:
    GOAL_FORMAT: "POLAR"
    DIMENSIONALITY: 2
    
  GOAL_SENSOR_UUID: pointgoal_with_gps_compass
  MEASUREMENTS: ['DISTANCE_TO_GOAL', 'SUCCESS', 'SPL']
  SUCCESS:
    SUCCESS_DISTANCE: 0.2
    
DATASET:
  TYPE: PointNav-v1
  SPLIT: test
  DATA_PATH: data/datasets/pointnav/mp3d/v1/{split}/{split}.json.gz

VIDEO_OPTION: ["disk"]

# 다중 로봇 특화 설정
MULTI_ROBOT:
  ENABLE: True
  NUM_AGENTS: 2
  COORDINATION_MODE: "INDEPENDENT"  # INDEPENDENT, COOPERATIVE, COMPETITIVE
  COLLISION_DETECTION: True
  MIN_DISTANCE_BETWEEN_AGENTS: 0.5